name: PR Check

on: workflow_call

permissions:
  id-token: write  # This is required for requesting the JWT
  contents: read  # This is required for actions/
  pull-requests: write
  actions: read # This is needed for the audit workflow
  deployments: write # Required for deployments
  checks: write
  statuses: write

jobs:
  label-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        id: checkout
        
      - uses: octokit/graphql-action@75105ddc89d71a35eca847e7a011028198ca6ec5
        id: pr-data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query pullRequest(
              $repo:String!
              $owner:String!
              $number:Int!
            ) {
              repository(name: $repo, owner: $owner) {
                pullRequest(number: $number) {
                  author {
                    login
                  }
                  commits(last: 100) {
                    nodes {
                      commit {
                        committer {
                          user {
                            login
                          }
                        }
                        author {
                          user {
                            login
                          }
                        }
                        message
                        id
                      }
                    }
                    pageInfo {
                      hasNextPage
                    }
                  }
                }
              }
            }
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          number: ${{ github.event.pull_request.number }}
          
      - name: Run PR Label check
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |            
            const prLabels = ${{ toJSON(github.event.pull_request.labels.*.name) }};
            const requiredPRCloseLabels = ['staging-approved', 'no-deployment'];
            let state = 'success'
            let description = ''
          
            if (!requiredPRCloseLabels.some(reqdLabel => prLabels.includes(reqdLabel))) {
              description = 'Missing required label'
              console.error(`PR needs to have one of labels: ${requiredPRCloseLabels.join(', ')}`)
              state = 'pending'
            }

            const owner = context.payload.repository.owner.login;
            const repo = context.payload.repository.name;
            const req = {
              owner: owner,
              repo: repo,
              sha: context.payload.pull_request.head.sha,
              state: state,
              target_url: `https://github.com/${ owner }/${ repo }/actions/runs/${ context.runId }`,
              description: description,
              context: 'Label Check',
            };

            //console.dir( req );
            await github.rest.repos.createCommitStatus( req );
